{"version":3,"sources":["components/header/index.jsx","api/ghost.api.jsx","components/article/index.jsx","components/articleOverviewList/index.jsx","containers/blog/index.jsx","containers/about/index.jsx","routes.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","onClick","e","document","body","classList","contains","remove","localStorage","setItem","add","Component","ghostAPI","path","params","query","qs","stringify","Object","objectSpread","client_id","client_secret","fetch","concat","response","json","data","pageNumber","this","get","page","limit","absolute_urls","filter","fields","slug","Article","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loading","post","location","pathname","split","getPost","setState","posts","console","error","_context","t0","__html","html","src","feature_image","alt","title","published_at","dangerouslySetInnerHTML","createHTML","React","ArticleOverviewList","date","Intl","DateTimeFormat","year","month","day","format","key","formatDate","published_date","Link","to","custom_excerpt","articles","map","renderOverview","Blog","currentPage","getPage","articleOverviewList","About","Router","BrowserRouter","Switch","Route","exact","component","App","header","routes","Boolean","window","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4dde21d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.scss';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header container flex-container\">\r\n        <div className=\"header__logo flex-container__item\">\r\n          <h3 className=\"brand\">\r\n          <a href=\"/\">\r\n            <span className=\"brand--main\">Dat | </span>\r\n            <span className=\"brand--sub\">Engineering</span>\r\n            </a>\r\n          </h3>\r\n        </div>\r\n        <nav className=\"header__nav-bar flex-container__item\">\r\n          <a href=\"/projects\">Projects</a>\r\n          <a href=\"/resume\">Resume</a>\r\n          <a href=\"/about\">About</a>\r\n          <button className='btn btn-primary'\r\n              onClick={(e) => {\r\n                  if (document.body.classList.contains('night-mode')){\r\n                    document.body.classList.remove('night-mode')\r\n                    localStorage.setItem('night_mode', 0)\r\n                  } else{\r\n                    document.body.classList.add('night-mode')\r\n                    localStorage.setItem('night_mode', 1)\r\n                  }\r\n              }}>\r\n              Night Mode\r\n          </button>\r\n         </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Header;","import qs from 'querystring';\r\n\r\nconst GHOST_PUBLIC_API = 'https://blog.dat.works/ghost/api/v0.1'\r\nconst client_id = 'ghost-frontend';\r\nconst client_secret = 'ec2e9f4fefe0';\r\n\r\nclass Ghost {\r\n  async get(path, params) {\r\n    const query = qs.stringify({...params, client_id,client_secret})\r\n    const response = await fetch(`${GHOST_PUBLIC_API}/${path}?${query}`)\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n  async getPage(pageNumber){\r\n    const page = await this.get('posts',\r\n      { page: pageNumber,\r\n        limit: 3, \r\n        absolute_urls: true,\r\n        filter: \"author_id:1\",\r\n        fields: \"slug,id,title,feature_image,custom_excerpt,published_at\"})\r\n    return page;\r\n  }\r\n  async getPost(slug){\r\n    const page = await this.get(`posts/slug/${slug}/`,\r\n      { absolute_urls: true})\r\n    return page;\r\n  }\r\n}\r\n\r\nconst ghostAPI = new Ghost();\r\n\r\nexport default ghostAPI;","import React from 'react'\r\nimport './style.scss'\r\nimport ghostAPI from '../../api/ghost.api';\r\n\r\nclass Article extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { loading: true, post: null }\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      const slug =this.props.location.pathname.split('/')[2]\r\n      const data = await ghostAPI.getPost(slug)\r\n      this.setState({ loading: false, post: data.posts[0] })\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  createHTML(){\r\n    return {__html: this.state.post.html}\r\n  }\r\n\r\n  render() {\r\n    let post = this.state.post;\r\n    return (\r\n      this.state.loading \r\n        ? 'Loading Page'\r\n        : <div className=\"article container\" >\r\n            <div className=\"article__feature_img\">\r\n              <img src={post.feature_image} alt=\"feature\" className='img-fluid'/>\r\n            </div>\r\n            <h1 className=\"article__headline\">{post.title}</h1>\r\n            <span className=\"article__meta\">\r\n              <div className=\"article__meta--author\">Dat Nguyen</div>\r\n              <div className=\"article__meta--date\">{post.published_at.split('T')[0]}</div>\r\n            </span>\r\n            <div className=\"article__body\">\r\n              <div dangerouslySetInnerHTML={this.createHTML()}></div>\r\n            </div>\r\n          </div>\r\n      )\r\n  }\r\n}\r\nexport default Article","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './style.scss'\r\n\r\nclass ArticleOverviewList extends React.Component {\r\n  formatDate(date){\r\n    return Intl.DateTimeFormat('en-US',  \r\n      {year: 'numeric',  \r\n      month: 'short', \r\n      day: '2-digit'})\r\n    .format(date)\r\n  }\r\n\r\n  renderOverview(post){ \r\n    const overview = \r\n      <div className=\"overview\" key={post.slug}>\r\n        <div className=\"overview__date\">\r\n          {this.formatDate(post.published_date)}\r\n        </div>\r\n        <div className=\"overview__description\">\r\n          <Link to={`/blog/${post.slug}`} className='overview__description--link'>\r\n            <h2 className=\"overview__description--title\">{post.title}</h2>\r\n          </Link>\r\n            <p className=\"overview__description--excerpt\">{post.custom_excerpt}</p>\r\n        </div>\r\n        <div className=\"overview__feature_image\">\r\n          <Link to={`/blog/${post.slug}`} className='overview__description--link'>\r\n            <img src={post.feature_image} alt=\"featured\"/>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      return overview\r\n  }\r\n  \r\n  render() {\r\n    let {articles} = this.props\r\n    return (\r\n      <div className=\"articles-list\">\r\n        <h1 className=\"articles-list__title\">Blog</h1>\r\n         {articles.map(post => this.renderOverview(post))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ArticleOverviewList;","import React, { Component } from 'react'\r\nimport ghostAPI from '../../api/ghost.api';\r\nimport ArticleOverviewList from '../../components/articleOverviewList';\r\nimport './style.scss'\r\n\r\nclass Blog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {loading: true, currentPage: 1, page: null}\r\n  }\r\n  async componentDidMount() {\r\n    const page = await ghostAPI.getPage(this.state.currentPage)\r\n    this.setState({loading: false, currentPage: 1, page: page})\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"blog container\">\r\n        {this.state.loading ?\r\n          'Loading Blog...'\r\n          : this.state.page.posts?\r\n              <ArticleOverviewList articles={this.state.page.posts}/>               \r\n          : 'Error'\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Blog;","import React from 'react'\r\nimport './style.scss'\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"about\">\r\n        Hello\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default About;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Article from './components/article';\r\n\r\nimport Blog from './containers/blog';\r\n// import Projects from './containers/project';\r\nimport About from './containers/about';\r\n\r\nclass Router extends React.Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path='/' component={Blog} />\r\n          <Route path='/blog/:slug' component={Article} />\r\n          {/* <Route path='/projects' component={Projects} /> */}\r\n          <Route path='/about' component={About} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Router;\r\n","import React, { Component } from 'react';\r\nimport Header from './components/header';\r\n// import Footer from './components/footer';\r\nimport Router from './routes';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Router />\r\n        {/* <Footer /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './styles/index.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}