{"version":3,"sources":["components/header/index.jsx","api/ghost.api.jsx","components/article/index.jsx","components/articleOverviewList/index.jsx","containers/blog/index.jsx","containers/about/index.jsx","routes.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","onClick","e","document","body","classList","contains","remove","localStorage","setItem","add","Component","ghostAPI","path","params","query","qs","stringify","Object","objectSpread","client_id","client_secret","fetch","concat","response","json","data","pageNumber","this","get","page","limit","absolute_urls","filter","fields","slug","Article","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loading","post","location","pathname","split","getPost","setState","posts","console","error","_context","t0","__html","html","src","feature_image","alt","title","published_at","dangerouslySetInnerHTML","createHTML","React","ArticleOverviewList","date","Intl","DateTimeFormat","year","month","day","format","key","formatDate","published_date","Link","to","custom_excerpt","articles","map","renderOverview","Blog","currentPage","getPage","articleOverviewList","About","Router","BrowserRouter","Switch","Route","exact","component","App","header","routes","Boolean","window","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d501caf7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './style.scss';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"header  repsonsive-container\">\n        <div className=\"header__logo\">\n          <h3 className=\"brand\">\n          <a href=\"/\">\n            <span className=\"brand--main\">Dat | </span>\n            <span className=\"brand--sub\">Engineering</span>\n            </a>\n          </h3>\n        </div>\n        <nav className=\"header__nav-bar\">\n          <a href=\"/projects\">Projects</a>\n          <a href=\"/resume\">Resume</a>\n          <a href=\"/about\">About</a>\n          <button className='btn btn-primary'\n              onClick={(e) => {\n                  if (document.body.classList.contains('night-mode')){\n                    document.body.classList.remove('night-mode')\n                    localStorage.setItem('night_mode', 0)\n                  } else{\n                    document.body.classList.add('night-mode')\n                    localStorage.setItem('night_mode', 1)\n                  }\n              }}>\n              Night Mode\n          </button>\n         </nav>\n      </header>\n    );\n  }\n}\nexport default Header;","import qs from 'querystring';\n\nconst GHOST_PUBLIC_API = 'https://blog.dat.works/ghost/api/v0.1'\nconst client_id = 'ghost-frontend';\nconst client_secret = 'ec2e9f4fefe0';\n\nclass Ghost {\n  async get(path, params) {\n    const query = qs.stringify({...params, client_id,client_secret})\n    const response = await fetch(`${GHOST_PUBLIC_API}/${path}?${query}`)\n    const data = await response.json();\n    return data;\n  }\n  async getPage(pageNumber){\n    const page = await this.get('posts',\n      { page: pageNumber,\n        limit: 3, \n        absolute_urls: true,\n        filter: \"author_id:1\",\n        fields: \"slug,id,title,feature_image,custom_excerpt,published_at\"})\n    return page;\n  }\n  async getPost(slug){\n    const page = await this.get(`posts/slug/${slug}/`,\n      { absolute_urls: true})\n    return page;\n  }\n}\n\nconst ghostAPI = new Ghost();\n\nexport default ghostAPI;","import React from 'react'\nimport './style.scss'\nimport ghostAPI from '../../api/ghost.api';\n\nclass Article extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: true, post: null }\n  }\n  async componentDidMount() {\n    try {\n      const slug =this.props.location.pathname.split('/')[2]\n      const data = await ghostAPI.getPost(slug)\n      this.setState({ loading: false, post: data.posts[0] })\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  createHTML(){\n    return {__html: this.state.post.html}\n  }\n\n  render() {\n    let post = this.state.post;\n    return (\n      this.state.loading \n        ? 'Loading Page'\n        : <div className=\"article container\" >\n            <div className=\"article__feature_img\">\n              <img src={post.feature_image} alt=\"feature\" className='img-fluid'/>\n            </div>\n            <h1 className=\"article__headline\">{post.title}</h1>\n            <span className=\"article__meta\">\n              <div className=\"article__meta--author\">Dat Nguyen</div>\n              <div className=\"article__meta--date\">{post.published_at.split('T')[0]}</div>\n            </span>\n            <div className=\"article__body\">\n              <div dangerouslySetInnerHTML={this.createHTML()}></div>\n            </div>\n          </div>\n      )\n  }\n}\nexport default Article","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './style.scss'\n\nclass ArticleOverviewList extends React.Component {\n  formatDate(date){\n    return Intl.DateTimeFormat('en-US',  \n      {year: 'numeric',  \n      month: 'short', \n      day: '2-digit'})\n    .format(date)\n  }\n\n  renderOverview(post){ \n    const overview = \n      <div className=\"overview\" key={post.slug}>\n        <div className=\"overview__date\">\n          {this.formatDate(post.published_date)}\n        </div>\n        <div className=\"overview__description\">\n          <Link to={`/blog/${post.slug}`} className='overview__description--link'>\n            <h2 className=\"overview__description--title\">{post.title}</h2>\n          </Link>\n            <p className=\"overview__description--excerpt text-justify\">{post.custom_excerpt}</p>\n        </div>\n        <div className=\"overview__feature_image\">\n          <Link to={`/blog/${post.slug}`} className='overview__description--link'>\n            <img src={post.feature_image} alt=\"featured\"/>\n          </Link>\n        </div>\n      </div>\n      return overview\n  }\n  \n  render() {\n    let {articles} = this.props\n    return (\n      <div className=\"articles-list\">\n        <h1 className=\"articles-list__title\">Blog</h1>\n         {articles.map(post => this.renderOverview(post))}\n      </div>\n    )\n  }\n}\n\nexport default ArticleOverviewList;","import React, { Component } from 'react'\nimport ghostAPI from '../../api/ghost.api';\nimport ArticleOverviewList from '../../components/articleOverviewList';\nimport './style.scss'\n\nclass Blog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {loading: true, currentPage: 1, page: null}\n  }\n  async componentDidMount() {\n    const page = await ghostAPI.getPage(this.state.currentPage)\n    this.setState({loading: false, currentPage: 1, page: page})\n  }\n  \n  render() {\n    return (\n      <div className=\"blog  repsonsive-container\">\n        {this.state.loading ?\n          'Loading Blog...'\n          : this.state.page.posts?\n              <ArticleOverviewList articles={this.state.page.posts}/>               \n          : 'Error'\n        }\n      </div>\n    )\n  }\n\n}\n\nexport default Blog;","import React from 'react'\nimport './style.scss'\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className=\"about\">\n        Hello\n      </div>\n    )\n  }\n}\nexport default About;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Article from './components/article';\n\nimport Blog from './containers/blog';\n// import Projects from './containers/project';\nimport About from './containers/about';\n\nclass Router extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path='/' component={Blog} />\n          <Route path='/blog/:slug' component={Article} />\n          {/* <Route path='/projects' component={Projects} /> */}\n          <Route path='/about' component={About} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Router;\n","import React, { Component } from 'react';\nimport Header from './components/header';\n// import Footer from './components/footer';\nimport Router from './routes';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Router />\n        {/* <Footer /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}